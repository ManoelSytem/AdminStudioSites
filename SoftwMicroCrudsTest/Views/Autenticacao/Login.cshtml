@model SoftwMicroCrudsTest.Models.LoginModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Login Admin Studio Sites</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--===============================================================================================-->
    <link rel="icon" type="image/png" href="../../images/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../../fonts/fonts_login/font-awesome-4.7.0/css/font-awesome.min.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="../../fonts/fonts_login/iconic/css/material-design-iconic-font.min.css">
    @Styles.Render("~/login/css")
    <!--===============================================================================================-->
</head>
<body>

    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                @using (Html.BeginForm())
                {

                    @Html.AntiForgeryToken();

                    <form class="login100-form validate-form">
                        <span class="login100-form-title p-b-26">
                            Bem-vindo Admin
                        </span>
                        <span class="login100-form-title p-b-48">
                            <i class="zmdi zmdi-font"></i>
                        </span>

                        <div class="wrap-input100 validate-input" data-validate="Valid email is: a@b.c">
                            @Html.ValidationMessageFor(model => model.Login, "", new { htmlAttributes = new { @Class = "text-danger" } })
                            @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @Class = "input100" } })
                            <span class="focus-input100" data-placeholder="Email"></span>
                        </div>

                        <div class="wrap-input100 validate-input" data-validate="Enter password">
                            <span class="btn-show-pass">
                                <i class="zmdi zmdi-eye"></i>
                            </span>
                            @Html.ValidationMessageFor(model => model.Senha, "", new { htmlAttributes = new { @Class = "text-danger" } })
                            @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { name = "pass", @Class = "input100" } })
                            <span class="focus-input100" data-placeholder="Password"></span>
                        </div>

                        <div class="container-login100-form-btn">
                            <div class="wrap-login100-form-btn">
                                <div class="login100-form-bgbtn"></div>
                                <button type="submit" class="login100-form-btn">
                                    Login
                                </button>
                            </div>
                        </div>

                    </form>
                }
            </div>
        </div>
    </div>
    <div id="dropDownSelect1"></div>
    @Scripts.Render("~/login/script")
</body>
</html>